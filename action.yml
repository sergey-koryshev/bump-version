name: 'Bump Version'
description: 'The action increments version of specified project and submit it to repository'
inputs:
  project-type:
    description: 'Project type: Node, Posh, Custom'
    required: true
  version-configuration-path:
    description: 'Full path to version configuration'
    required: true
  app-name:
    description: 'Project name (used for commit name)'
    required: false
  posh-module-name:
    description: 'Name of powershell module, needs to be specified in case of project type [Posh]'
    required: false
  posh-custom-module-path:
    description: 'Path to powershell module with custom logic to get/set version, needs to be specified in case of project type [Custom]'
    required: false
  skip-tag:
    description: 'Indicates if wether the workflow will create tag or not'
    required: false
  workspace-name:
    description: 'Name of npm-workspace where version need to be incremented. Can be specified in case of project type [Node]'
    required: false
  override-increment-parts:
    description: 'Comma separated version parts to increment. If specified, it forces the workflow to increment specified version parts instead of determined based on label of PR'
    required: false
  root-path:
    description: 'Root path of target project'
    required: false
outputs:
  new-version:
    description: 'Incremented version'
    value: ${{ steps.bump-version.outputs.new-version }}

runs:
  using: 'composite'
  steps:
    - name: Checkout build-system repository
      uses: actions/checkout@v4
      with:
        repository: sergey-koryshev/build-system
        path: sk-build-system
        ref: version-helper-v1.4.0
    - name: Pull latest changes
      shell: bash
      run: git pull
    - name: Bump version
      id: bump-version
      shell: pwsh
      working-directory: ${{ inputs.root-path }}
      run: |
        $params = @{
          GithubWorkspace = "${{ github.workspace }}"
          GithubRepository = "${{ github.repository }}"
          PoshCustomModulePath = "${{ inputs.posh-custom-module-path }}"
          OverrideIncrementParts = "${{ inputs.override-increment-parts }}"
          ProjectType = "${{ inputs.project-type }}"
          PoshModuleName = "${{ inputs.posh-module-name }}"
          SHA = "${{ github.sha }}"
          VersionConfigurationPath = "${{ inputs.version-configuration-path }}"
          WorkspaceName = "${{ inputs.workspace-name }}"
        }
        . (Join-Path "${{ github.action_path }}" "build/bump-version-step.ps1") @params
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Commit New Version
      shell: pwsh
      run: |
        function Invoke-CommandSafely {
          param(
            [string]
            $Command
          )

          Invoke-Expression "& $Command" -ErrorAction Stop
          
          if ($LASTEXITCODE -ne 0) {
            throw "Command [$Command] failed to execute."
          }
        }

        Write-Host "====== Setting up git ======"
        Invoke-CommandSafely "git config --global user.name ""$env:GITHUB_ACTOR"""
        Invoke-CommandSafely "git config --global user.email ""$env:GITHUB_ACTOR@users.noreply.github.com"""
        Invoke-CommandSafely "git config --global push.followTags true"

        Write-Host
        Write-Host "====== Pulling last changes ======"
        Invoke-CommandSafely "git stash"
        Invoke-CommandSafely "git pull"
        Invoke-CommandSafely "git stash pop"

        Write-Host
        Write-Host "====== Submitting changes ======"
        $annotation = "Bumped ${{ inputs.app-name }}$([string]::IsNullOrWhiteSpace('${{ inputs.app-name }}') ? [string]::Empty : ' ')version to ${{ env.new-version }}"
        Invoke-CommandSafely "git commit -am ""[automated] $annotation [skip ci]"""

        $skipTag = "${{ inputs.skip-tag }}"
        if ([string]::IsNullOrWhiteSpace($skipTag) -or $skipTag -eq "false") {
          Invoke-CommandSafely "git tag -a -m ""$annotation"" ""${{ inputs.app-name }}$([string]::IsNullOrWhiteSpace('${{ inputs.app-name }}') ? [string]::Empty : '-')v${{ env.new-version }}"""
        }

        Invoke-CommandSafely "git push"